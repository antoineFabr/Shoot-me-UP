<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHUAAAB1CAYAAABwBK68AAAABGdBTUEAALGPC/xhBQAAC0dJREFUeF7t
        nc3LJFcVxtuAoAPxA6IEEUSDIOgsJhiQbBJxMaMJwrgI6HJgFoMKbtSAKxMIuhpXyUoC4kYGJCBKyE7E
        hQvFTfQfcJFFdCESN0J5ftV1uk/dfqrro6v6vTV9L/zot0/V/XqeutV16+vd3Pze8w8dll4y3jOqHv5p
        3FZlrBkZXDOWrhtvG8pExZvGNVXWWpHBNWPpSYMRqAxU/NV4TJW1VmRwzVhqm/rBR6vN459u8b5HHimm
        rglLbVM/c6Pa/OiNPd99vdp85OPF1DVh6dDUH79VbV75Q7X5yR+rzfcfFFPXhqViqgquGUvFVBVcM5aK
        qSq4ZiwVU1VwzVgqpqrgmrFUTFXBNWOpmKqCa8ZSMVUF14ylYqoKrhlLxVQVXDOWiqkquGYsFVNVcM1Y
        Kqaq4JqxVExVwTVjqZiqgmvGUjFVBdeMpWKqCq4BS9dSmvhkUy0dlLdGZDBnLD1mcF8vt3Yqfm/s7/mN
        psKhqaxLHlUW9axuFMtgzli6a0RTjuOmMkr1SO3jrmpHzshgzlh6NQjez1PPVZtfvbPntb9sbxVV62pe
        Ve3IGRnMGUQOgm/v6+0C87gt9Lf/qTa/+feee/e3o1XkSe4JhmLq0iCyC14b8K2Xq83P/qR5/e9tM503
        /rVdzj3AKTfvpMYWU5cGkV3wWvwXf1Ftfvff7Wj0Eel/pyM0wq7Yf2cjtpEUU88MIrvgLVOVccdwU/2o
        2Kc8xdTzg8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5
        g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFV
        I4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4M5g8gueDFVI4NLYon7drnNk3tq+7gu8l+5qZZ4/axq
        bwr9PPt9wzK4JHQ2EU3SrHPwSISlKzXVEhsl7YrrSJpyXor5z4EMLoUlHmfgbvgDATrg7vlnkzKu2tRn
        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
        e1yobcjS7FIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>